/*
 *
 */

//buildscript {
//	repositories {
//		maven { url "https://plugins.gradle.org/m2" }
//		mavenCentral()
////		mavenLocal()
//	}
//	dependencies {
////		classpath 'net.saliman:gradle-cobertura-plugin:2.3.2'
//		classpath 'com.github.kt3k.coveralls:2.6.3'
//	}
//}
 
 plugins {
//	 id "net.saliman.cobertura" version "2.3.2"
	 id 'jacoco'
	 id 'com.github.kt3k.coveralls' version '2.6.3'
 }

repositories {	 mavenCentral() }


 
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
//apply plugin: 'com.github.kt3k.coveralls'

//apply plugin: 'net.saliman.cobertura'
//apply plugin: "jacoco"

jacoco { toolVersion = "0.7.7.201606060606" }
jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
//				csv.enabled false
		//		html.destination "${buildDir}/jacoco/html"
	}
}

compileJava {options.encoding = "UTF-8"}


task javadocJar(type: Jar) {
	classifier = 'javadoc'
	from javadoc
}

task sourcesJar(type: Jar) {
	classifier = 'sources'
	from sourceSets.main.allSource
}



group = "com.vmware.loginsightapi"
archivesBaseName = "loginsight-java-api"
version = "0.1.0"
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
if (!project.hasProperty('sonatypeUsername')) 
	ext.sonatypeUsername = ""

if (!project.hasProperty('sonatypePassword')) 
	ext.sonatypePassword = ""

artifacts { archives jar, javadocJar, sourcesJar }

signing { 
	required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
	sign configurations.archives 
}

task printSigning << {
	println "Signing "
	println configurations.archives 
	println "isReleaseVersion: " + isReleaseVersion
	println "isRequired: " + signing.required

}

uploadArchives {
	repositories {
		mavenDeployer {
			beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}

			snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
				authentication(userName: sonatypeUsername, password: sonatypePassword)
			}
			
			//setUniqueVersion(false)

			pom.project {
				name 'VMware LogInsight Java API'
				packaging 'jar'
				description 'A application used as an example on how to set up pushing  its components to the Central Repository.'
				url 'https://github.com/vmware/loginsight-java-api'

				scm {
					connection 'scm:https://kalyanvgopal@github.com/vmware/loginsight-java-api.git'
					developerConnection 'scm:git://github.com/vmware/loginsight-java-api.git'
					url 'https://github.com/vmware/loginsight-java-api'
				}

				licenses {
					license {
						name 'The Apache License, Version 2.0'
						url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
					}
				}

				developers {
					developer {
						id 'kalyanvgopal'
						name 'Kalyan Venu Gopal Abbaraju'
						email 'kalyan.abbaraju@gmail.com'
					}
					developer {
						id 'mpscsela'
						name 'Manu Pratap Singh'
						email 'msingh@vmware.com'
					}
				}
			}
		}
	}
}

sourceSets.main.java.srcDirs = ["src/main/java"]



// In this section you declare the dependencies for your production and test code
dependencies {
	//    compile 'org.slf4j:slf4j-api:1.7.21'
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.1'
	compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.1'
	compile "org.apache.commons:commons-lang3:3.0"
	compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'
	compile 'org.apache.commons:commons-configuration2:2.0'

	compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.1'
	compile 'org.apache.commons:commons-pool2:2.0'
	compile "javax.validation:validation-api:1.1.0.Final"
	compile 'org.codehaus.groovy:groovy-all:2.4.5'
	compile 'org.apache.httpcomponents:httpasyncclient:4.1-beta1'
	compile 'org.apache.httpcomponents:httpclient:4.5'
	compile 'org.apache.httpcomponents:fluent-hc:4.5.2'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.7.5'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.7.5'
	compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.7.5'
	compile 'joda-time:joda-time:2.3'
	compile 'com.fasterxml.jackson.datatype:jackson-datatype-joda:2.7.5'

	compile "net.sourceforge.jtds:jtds:1.3.1"
	//	classpath 'net.saliman:gradle-cobertura-plugin:2.3.2'

	// Declare the dependency for your favourite test framework you want to use in your tests.
	// TestNG is also supported by the Gradle Test task. Just change the
	// testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
	// 'test.useTestNG()' to your build script.
	testCompile 'junit:junit:4.12'
	testCompile 'org.mockito:mockito-core:1.10.19'
	testCompile 'org.spockframework:spock-spring:1.0-groovy-2.4'
//	testRuntime "org.slf4j:slf4j-api:1.7.10"
}
